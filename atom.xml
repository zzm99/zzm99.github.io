<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>zzm99</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-04-27T10:18:45.513Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>zzm99</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>爬取淘宝搜索结果</title>
    <link href="http://yoursite.com/2019/04/27/%E7%88%AC%E5%8F%96%E6%B7%98%E5%AE%9D%E6%90%9C%E7%B4%A2%E7%BB%93%E6%9E%9C/"/>
    <id>http://yoursite.com/2019/04/27/爬取淘宝搜索结果/</id>
    <published>2019-04-27T08:36:14.000Z</published>
    <updated>2019-04-27T10:18:45.513Z</updated>
    
    <content type="html"><![CDATA[<h2 id="通过python爬虫可以轻松爬取淘宝搜索关键字返回的内容"><a href="#通过python爬虫可以轻松爬取淘宝搜索关键字返回的内容" class="headerlink" title="通过python爬虫可以轻松爬取淘宝搜索关键字返回的内容"></a>通过python爬虫可以轻松爬取淘宝搜索关键字返回的内容</h2><a id="more"></a> <h2 id="效果展示："><a href="#效果展示：" class="headerlink" title="效果展示："></a>效果展示：</h2><p><img src="/2019/04/27/爬取淘宝搜索结果/jieguo.jpg" alt="jieguo"></p><h2 id="源码："><a href="#源码：" class="headerlink" title="源码："></a>源码：</h2><h3 id="淘宝网搜索功能受限："><a href="#淘宝网搜索功能受限：" class="headerlink" title="淘宝网搜索功能受限："></a>淘宝网搜索功能受限：</h3><p>由于淘宝设置了要登陆了才能使用搜索功能</p><p>so， 下面这份简单的爬虫代码并不会起作用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#CrowTaobaoPrice.py</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getHTMLText</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        r = requests.get(url, timeout=<span class="number">30</span>)</span><br><span class="line">        r.raise_for_status()</span><br><span class="line">        r.encoding = r.apparent_encoding</span><br><span class="line">        <span class="keyword">return</span> r.text</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span></span><br><span class="line">     </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parsePage</span><span class="params">(ilt, html)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        plt = re.findall(<span class="string">r'\"view_price\"\:\"[\d\.]*\"'</span>,html)</span><br><span class="line">        tlt = re.findall(<span class="string">r'\"raw_title\"\:\".*?\"'</span>,html)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(plt)):</span><br><span class="line">            price = eval(plt[i].split(<span class="string">':'</span>)[<span class="number">1</span>])</span><br><span class="line">            title = eval(tlt[i].split(<span class="string">':'</span>)[<span class="number">1</span>])</span><br><span class="line">            ilt.append([price , title])</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">""</span>)</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printGoodsList</span><span class="params">(ilt)</span>:</span></span><br><span class="line">    tplt = <span class="string">"&#123;:4&#125;\t&#123;:8&#125;\t&#123;:16&#125;"</span></span><br><span class="line">    print(tplt.format(<span class="string">"序号"</span>, <span class="string">"价格"</span>, <span class="string">"商品名称"</span>))</span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> g <span class="keyword">in</span> ilt:</span><br><span class="line">        count = count + <span class="number">1</span></span><br><span class="line">        print(tplt.format(count, g[<span class="number">0</span>], g[<span class="number">1</span>]))</span><br><span class="line">         </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    goods = <span class="string">'书包'</span></span><br><span class="line">    depth = <span class="number">3</span></span><br><span class="line">    start_url = <span class="string">'https://s.taobao.com/search?q='</span> + goods</span><br><span class="line">    infoList = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(depth):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            url = start_url + <span class="string">'&amp;s='</span> + str(<span class="number">44</span>*i)</span><br><span class="line">            html = getHTMLText(url)</span><br><span class="line">            parsePage(infoList, html)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">    printGoodsList(infoList)</span><br><span class="line">     </span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h3 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h3><p>首先我们需要先在浏览器中登录我们的个人淘宝，然后搜索以书包为例的商品，打开开发者模式（我使用的是chrome）或者按F12</p><p>这里我们可以看到我们当前的cookie和user-agent（一般是Mozilla/5.0）（注意：如果没有出现这几个name，点击浏览器刷新就会出现了）</p><p>通过增加cookie和user-agent，发现代码正常运行</p><p>下面代码中getcookiefromchrome函数为获取cookie</p><p>然后在gethtmltext函数中增加cookie和user-agent访问身份</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> sqlite3</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> win32.win32crypt <span class="keyword">import</span> CryptUnprotectData</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getcookiefromchrome</span><span class="params">()</span>:</span></span><br><span class="line">    host = <span class="string">'.taobao.com'</span></span><br><span class="line">    cookies_str = <span class="string">''</span></span><br><span class="line">    cookiepath=os.environ[<span class="string">'LOCALAPPDATA'</span>]+<span class="string">r"\Google\Chrome\User Data\Default\Cookies"</span></span><br><span class="line">    sql=<span class="string">"select host_key,name,encrypted_value from cookies where host_key='%s'"</span> % host</span><br><span class="line">    <span class="keyword">with</span> sqlite3.connect(cookiepath) <span class="keyword">as</span> conn:</span><br><span class="line">        cu=conn.cursor()        </span><br><span class="line">        cookies=&#123;name:CryptUnprotectData(encrypted_value)[<span class="number">1</span>].decode() <span class="keyword">for</span> host_key,name,encrypted_value <span class="keyword">in</span> cu.execute(sql).fetchall()&#125;</span><br><span class="line">        <span class="keyword">for</span> key,values <span class="keyword">in</span> cookies.items():</span><br><span class="line">                cookies_str = cookies_str + str(key)+<span class="string">"="</span>+str(values)+<span class="string">';'</span></span><br><span class="line">        <span class="keyword">return</span> cookies_str</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getHTMLText</span><span class="params">(url)</span>:</span></span><br><span class="line">    cookies = getcookiefromchrome()</span><br><span class="line">    kv = &#123;<span class="string">'cookie'</span>:cookies,<span class="string">'user-agent'</span>:<span class="string">'Mozilla/5.0'</span>&#125;</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        r = requests.get(url, headers=kv, timeout=<span class="number">30</span>)</span><br><span class="line">        r.raise_for_status()</span><br><span class="line">        r.encoding = r.apparent_encoding</span><br><span class="line">        <span class="keyword">return</span> r.text</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span></span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parsePage</span><span class="params">(ilt, html)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        plt = re.findall(<span class="string">r'\"view_price\"\:\"[\d\.]*\"'</span>, html)</span><br><span class="line">        tlt = re.findall(<span class="string">r'\"raw_title\"\:\".*?\"'</span>,html)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(plt)):</span><br><span class="line">            price = eval(plt[i].split(<span class="string">':'</span>)[<span class="number">1</span>])</span><br><span class="line">            title = eval(tlt[i].split(<span class="string">':'</span>)[<span class="number">1</span>])</span><br><span class="line">            ilt.append([price, title])</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">""</span>)</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printGoodsList</span><span class="params">(ilt)</span>:</span></span><br><span class="line">    tplt = <span class="string">"&#123;:4&#125;\t&#123;:8&#125;\t&#123;:16&#125;"</span></span><br><span class="line">    print(tplt.format(<span class="string">"序号"</span>,<span class="string">"价格"</span>,<span class="string">"商品名称"</span>))</span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> g <span class="keyword">in</span> ilt:</span><br><span class="line">        count = count + <span class="number">1</span></span><br><span class="line">        print(tplt.format(count, g[<span class="number">0</span>], g[<span class="number">1</span>]))</span><br><span class="line">   </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    goods = input(<span class="string">'商品：'</span>)</span><br><span class="line">    depth = int(input(<span class="string">'页数：'</span>))</span><br><span class="line">    start_url = <span class="string">'https://s.taobao.com/search?q='</span> + goods</span><br><span class="line">    infoList = []</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"正在爬取···"</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(depth):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            url = start_url + <span class="string">'&amp;s='</span> + str(<span class="number">44</span>*i)</span><br><span class="line">            html = getHTMLText(url)</span><br><span class="line">            parsePage(infoList, html)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">    printGoodsList(infoList)</span><br><span class="line">    </span><br><span class="line">main()</span><br></pre></td></tr></table></figure><p>实测只有先前已经登陆过淘宝页面才能正常运行以上代码（清楚浏览器数据后运行没成功）</p><p>问题后续有时间再研究。。。</p><p>补充一些效果图吧：</p><p><img src="/2019/04/27/爬取淘宝搜索结果/1.png" alt="1"></p><p><img src="/2019/04/27/爬取淘宝搜索结果/2.jpg" alt="2"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;通过python爬虫可以轻松爬取淘宝搜索关键字返回的内容&quot;&gt;&lt;a href=&quot;#通过python爬虫可以轻松爬取淘宝搜索关键字返回的内容&quot; class=&quot;headerlink&quot; title=&quot;通过python爬虫可以轻松爬取淘宝搜索关键字返回的内容&quot;&gt;&lt;/a&gt;通过python爬虫可以轻松爬取淘宝搜索关键字返回的内容&lt;/h2&gt;
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
      <category term="爬虫" scheme="http://yoursite.com/categories/python/%E7%88%AC%E8%99%AB/"/>
    
    
  </entry>
  
  <entry>
    <title>使用pymatplotlib库画函数图</title>
    <link href="http://yoursite.com/2019/04/27/pymatplotlib/"/>
    <id>http://yoursite.com/2019/04/27/pymatplotlib/</id>
    <published>2019-04-27T08:07:47.000Z</published>
    <updated>2019-04-27T10:18:36.916Z</updated>
    
    <content type="html"><![CDATA[<h2 id="matplotlib库提供许多函数画静态图以及动态图。"><a href="#matplotlib库提供许多函数画静态图以及动态图。" class="headerlink" title="matplotlib库提供许多函数画静态图以及动态图。"></a>matplotlib库提供许多函数画静态图以及动态图。</h2><h2 id="下面展示效果图和源码："><a href="#下面展示效果图和源码：" class="headerlink" title="下面展示效果图和源码："></a>下面展示效果图和源码：</h2><a id="more"></a> <h3 id="demo1"><a href="#demo1" class="headerlink" title="demo1:"></a>demo1:</h3><p><img src="/2019/04/27/pymatplotlib/test.png" alt="test"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment">#author：zzm</span></span><br><span class="line"><span class="comment">#time: 2019.4.25</span></span><br><span class="line">s = np.arange(<span class="number">0</span>, np.pi*<span class="number">2</span>, <span class="number">0.01</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">x</span><span class="params">(s,a,p)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> a*np.sin(p*s)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">y</span><span class="params">(s,b,q,t)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> b*np.sin(q*s+t)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">lisa</span><span class="params">(a,b,n,t,posit)</span>:</span></span><br><span class="line">    p = <span class="number">1</span></span><br><span class="line">    q = n*p</span><br><span class="line">    plt.subplot(<span class="number">3</span>,<span class="number">3</span>,posit)</span><br><span class="line">    plt.grid()</span><br><span class="line">    plt.plot(x(s,a,p),y(s,b,q,t))</span><br><span class="line"></span><br><span class="line">lisa(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>)</span><br><span class="line">lisa(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,np.pi/<span class="number">2</span>,<span class="number">2</span>)</span><br><span class="line">lisa(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">3</span>)</span><br><span class="line">lisa(<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">0</span>,<span class="number">7</span>)</span><br><span class="line">lisa(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,np.pi/<span class="number">2</span>,<span class="number">8</span>)</span><br><span class="line">lisa(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">9</span>)</span><br><span class="line"></span><br><span class="line">plt.savefig(<span class="string">'test'</span>, dpi = <span class="number">600</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h3 id="demo2"><a href="#demo2" class="headerlink" title="demo2:"></a>demo2:</h3><p><img src="/2019/04/27/pymatplotlib/sinx.gif" alt="sinx_dot"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> animation</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fig, ax = plt.subplots()</span><br><span class="line">x = np.linspace(<span class="number">0</span>, <span class="number">2</span>*np.pi, <span class="number">200</span>)</span><br><span class="line">y = np.sin(x)</span><br><span class="line">l = ax.plot(x, y)</span><br><span class="line">dot, = ax.plot([], [], <span class="string">'ro'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init</span><span class="params">()</span>:</span></span><br><span class="line">    ax.set_xlim(<span class="number">0</span>, <span class="number">2</span>*np.pi)</span><br><span class="line">    ax.set_ylim(<span class="number">-1</span>, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> l</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen_dot</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> np.linspace(<span class="number">0</span>, <span class="number">2</span>*np.pi, <span class="number">200</span>):</span><br><span class="line">        newdot = [i, np.sin(i)]</span><br><span class="line">        <span class="keyword">yield</span> newdot</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">update_dot</span><span class="params">(newd)</span>:</span></span><br><span class="line">    dot.set_data(newd[<span class="number">0</span>], newd[<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">return</span> dot,</span><br><span class="line"></span><br><span class="line">ani = animation.FuncAnimation(fig, update_dot, frames = gen_dot, interval = <span class="number">100</span>, init_func=init)</span><br><span class="line">ani.save(<span class="string">'sin_dot.gif'</span>, writer=<span class="string">'pillow'</span>, fps=<span class="number">30</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h3 id="demo3"><a href="#demo3" class="headerlink" title="demo3:"></a>demo3:</h3><p><img src="/2019/04/27/pymatplotlib/roll.gif" alt="roll"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt </span><br><span class="line"><span class="keyword">import</span> matplotlib.animation <span class="keyword">as</span> animation</span><br><span class="line"></span><br><span class="line">fig = plt.figure(figsize=(<span class="number">6</span>, <span class="number">6</span>))</span><br><span class="line">ax = plt.gca()</span><br><span class="line">ax.grid()</span><br><span class="line">ln1, = ax.plot([], [], <span class="string">'-'</span>, lw=<span class="number">2</span>)</span><br><span class="line">ln2, = ax.plot([], [], <span class="string">'-'</span>, color=<span class="string">'r'</span>, lw=<span class="number">2</span>)</span><br><span class="line">theta = np.linspace(<span class="number">0</span>, <span class="number">2</span>*np.pi, <span class="number">100</span>)</span><br><span class="line">r_out = <span class="number">1</span></span><br><span class="line">r_in = <span class="number">0.5</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init</span><span class="params">()</span>:</span></span><br><span class="line">    ax.set_xlim(<span class="number">-2</span>, <span class="number">2</span>)</span><br><span class="line">    ax.set_ylim(<span class="number">-2</span>, <span class="number">2</span>)</span><br><span class="line">    x_out = [r_out*np.cos(theta[i]) <span class="keyword">for</span> i <span class="keyword">in</span> range(len(theta))]</span><br><span class="line">    y_out = [r_out*np.sin(theta[i]) <span class="keyword">for</span> i <span class="keyword">in</span> range(len(theta))]</span><br><span class="line">    ln1.set_data(x_out, y_out)</span><br><span class="line">    <span class="keyword">return</span> ln1,</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">update</span><span class="params">(i)</span>:</span></span><br><span class="line">    x_in = [(r_out-r_in)*np.cos(theta[i])+r_in*np.cos(theta[j]) <span class="keyword">for</span> j <span class="keyword">in</span> range(len(theta))]</span><br><span class="line">    y_in = [(r_out-r_in)*np.sin(theta[i])+r_in*np.sin(theta[j]) <span class="keyword">for</span> j <span class="keyword">in</span> range(len(theta))]</span><br><span class="line">    ln2.set_data(x_in, y_in)</span><br><span class="line">    <span class="keyword">return</span> ln2,</span><br><span class="line"></span><br><span class="line">ani = animation.FuncAnimation(fig, update, range(len(theta)), init_func=init, interval=<span class="number">30</span>)</span><br><span class="line">ani.save(<span class="string">'roll.gif'</span>, writer=<span class="string">'pillow'</span>, fps=<span class="number">100</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h3 id="demo4"><a href="#demo4" class="headerlink" title="demo4:"></a>demo4:</h3><p><img src="/2019/04/27/pymatplotlib/f2.gif" alt="danbai"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sin, cos</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> scipy.integrate <span class="keyword">import</span> odeint</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> matplotlib.animation <span class="keyword">as</span> animation</span><br><span class="line"></span><br><span class="line">g = <span class="number">9.8</span></span><br><span class="line">leng = <span class="number">1.0</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pendulum_equations</span><span class="params">(w, t, l)</span>:</span></span><br><span class="line">    th, v = w</span><br><span class="line">    dth = v</span><br><span class="line">    dv  = - g/l * sin(th)</span><br><span class="line">    <span class="keyword">return</span> dth, dv</span><br><span class="line"></span><br><span class="line">t = np.arange(<span class="number">0</span>, <span class="number">20</span>, <span class="number">0.1</span>)</span><br><span class="line">track = odeint(pendulum_equations, (<span class="number">1.0</span>, <span class="number">0</span>), t, args=(leng,))</span><br><span class="line">xdata = [leng*sin(track[i, <span class="number">0</span>]) <span class="keyword">for</span> i <span class="keyword">in</span> range(len(track))]</span><br><span class="line">ydata = [-leng*cos(track[i, <span class="number">0</span>]) <span class="keyword">for</span> i <span class="keyword">in</span> range(len(track))]</span><br><span class="line"></span><br><span class="line">figure, ax = plt.subplots()</span><br><span class="line">ax.grid()</span><br><span class="line">line, = ax.plot([], [], <span class="string">'H-'</span>, color=<span class="string">'darkred'</span>, lw=<span class="number">2</span>)</span><br><span class="line">time_template = <span class="string">'time = %.1fs'</span></span><br><span class="line">time_text = ax.text(<span class="number">0.05</span>, <span class="number">0.9</span>, <span class="string">''</span>, transform=ax.transAxes)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init</span><span class="params">()</span>:</span></span><br><span class="line">    ax.set_xlim(<span class="number">-2</span>, <span class="number">2</span>)</span><br><span class="line">    ax.set_ylim(<span class="number">-2</span>, <span class="number">2</span>)</span><br><span class="line">    time_text.set_text(<span class="string">''</span>)</span><br><span class="line">    <span class="keyword">return</span> line, time_text</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">update</span><span class="params">(i)</span>:</span></span><br><span class="line">    newx = [<span class="number">0</span>, xdata[i]]</span><br><span class="line">    newy = [<span class="number">0</span>, ydata[i]]</span><br><span class="line">    line.set_data(newx, newy)</span><br><span class="line">    time_text.set_text(time_template %(<span class="number">0.1</span>*i))</span><br><span class="line">    <span class="keyword">return</span> line, time_text</span><br><span class="line"></span><br><span class="line">ani = animation.FuncAnimation(figure, update, range(<span class="number">1</span>, len(xdata)), init_func=init, interval=<span class="number">50</span>)</span><br><span class="line">ani.save(<span class="string">'f2.gif'</span>, writer=<span class="string">'pillow'</span>, fps=<span class="number">100</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h3 id="demo5"><a href="#demo5" class="headerlink" title="demo5:"></a>demo5:</h3><p><img src="/2019/04/27/pymatplotlib/f1.gif" alt="sin"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> matplotlib.animation <span class="keyword">import</span> FuncAnimation</span><br><span class="line"></span><br><span class="line">fig, ax = plt.subplots()</span><br><span class="line">xdata, ydata = [], []</span><br><span class="line">ln, = ax.plot([], [], <span class="string">'r-'</span>, animated=<span class="literal">False</span>) <span class="comment">#,表示创建tuple类</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init</span><span class="params">()</span>:</span></span><br><span class="line">    ax.set_xlim(<span class="number">0</span>, <span class="number">2</span>*np.pi)</span><br><span class="line">    ax.set_ylim(<span class="number">-1</span>, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> ln,</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">update</span><span class="params">(frame)</span>:</span></span><br><span class="line">    xdata.append(frame)</span><br><span class="line">    ydata.append(np.sin(frame))</span><br><span class="line">    ln.set_data(xdata, ydata)</span><br><span class="line">    <span class="keyword">return</span> ln,</span><br><span class="line"></span><br><span class="line">ani = FuncAnimation(fig, update, frames=np.linspace(<span class="number">0</span>, <span class="number">2</span>*np.pi, <span class="number">128</span>),</span><br><span class="line">                    init_func=init, blit=<span class="literal">True</span>)</span><br><span class="line">ani.save(<span class="string">'f1.gif'</span>, writer=<span class="string">'pillow'</span>, fps=<span class="number">30</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h3 id="demo6"><a href="#demo6" class="headerlink" title="demo6:"></a>demo6:</h3><p><img src="/2019/04/27/pymatplotlib/0.gif" alt="wuli"><br><img src="/2019/04/27/pymatplotlib/1.gif" alt="wuli"><br><img src="/2019/04/27/pymatplotlib/2.gif" alt="wuli"><br><img src="/2019/04/27/pymatplotlib/3.gif" alt="wuli"><br><img src="/2019/04/27/pymatplotlib/4.gif" alt="wuli"><br><img src="/2019/04/27/pymatplotlib/5.gif" alt="wuli"><br><img src="/2019/04/27/pymatplotlib/6.gif" alt="wuli"><br><img src="/2019/04/27/pymatplotlib/7.gif" alt="wuli"><br><img src="/2019/04/27/pymatplotlib/8.gif" alt="wuli"><br><img src="/2019/04/27/pymatplotlib/9.gif" alt="wuli"><br><img src="/2019/04/27/pymatplotlib/10.gif" alt="wuli"><br><img src="/2019/04/27/pymatplotlib/11.gif" alt="wuli"><br><img src="/2019/04/27/pymatplotlib/12.gif" alt="wuli"><br><img src="/2019/04/27/pymatplotlib/13.gif" alt="wuli"><br><img src="/2019/04/27/pymatplotlib/14.gif" alt="wuli"><br><img src="/2019/04/27/pymatplotlib/zz.gif" alt="wuli"><br><img src="/2019/04/27/pymatplotlib/zz1.gif" alt="wuli"><br><img src="/2019/04/27/pymatplotlib/zz2.gif" alt="wuli"><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> matplotlib.animation <span class="keyword">import</span> FuncAnimation</span><br><span class="line"></span><br><span class="line"><span class="comment">#author： zzm</span></span><br><span class="line"><span class="comment">#time： 2019.4.25</span></span><br><span class="line"><span class="comment">#制作李萨如图形动态gif</span></span><br><span class="line"><span class="comment">#李萨如图形的轨迹方程：</span></span><br><span class="line"><span class="comment"># x = A1cos(wt+β1)</span></span><br><span class="line"><span class="comment"># y = A2cos(wt+β2)</span></span><br><span class="line"></span><br><span class="line">figure, ax = plt.subplots()</span><br><span class="line">xdata, ydata = [], []</span><br><span class="line">dot, = ax.plot([], [], <span class="string">'r-'</span>, animated=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#def x(s):</span></span><br><span class="line"><span class="comment">#   return np.cos(3*s+np.pi)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">y</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">4</span>/np.pi/<span class="number">3</span>*np.sin(<span class="number">3</span>*s)+<span class="number">4</span>/np.pi/<span class="number">3</span>*np.sin(<span class="number">3</span>*s)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init</span><span class="params">()</span>:</span></span><br><span class="line">    ax.set_xlim(-np.pi, np.pi)</span><br><span class="line">    ax.set_ylim(<span class="number">-2</span>, <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span> dot,</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">update</span><span class="params">(frame)</span>:</span></span><br><span class="line">    xdata.append(frame)</span><br><span class="line">    ydata.append(y(frame))</span><br><span class="line">    dot.set_data(xdata, ydata)</span><br><span class="line">    <span class="keyword">return</span> dot,</span><br><span class="line"></span><br><span class="line">photo = FuncAnimation(figure, update, frames=np.linspace(-np.pi,np.pi, <span class="number">128</span>),</span><br><span class="line">                    init_func=init, blit=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">photo.save(<span class="string">'zz2.gif'</span>, writer=<span class="string">'pillow'</span>, fps=<span class="number">30</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;matplotlib库提供许多函数画静态图以及动态图。&quot;&gt;&lt;a href=&quot;#matplotlib库提供许多函数画静态图以及动态图。&quot; class=&quot;headerlink&quot; title=&quot;matplotlib库提供许多函数画静态图以及动态图。&quot;&gt;&lt;/a&gt;matplotlib库提供许多函数画静态图以及动态图。&lt;/h2&gt;&lt;h2 id=&quot;下面展示效果图和源码：&quot;&gt;&lt;a href=&quot;#下面展示效果图和源码：&quot; class=&quot;headerlink&quot; title=&quot;下面展示效果图和源码：&quot;&gt;&lt;/a&gt;下面展示效果图和源码：&lt;/h2&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
      <category term="库的学习" scheme="http://yoursite.com/categories/Python/%E5%BA%93%E7%9A%84%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="pymatplotlib库" scheme="http://yoursite.com/categories/Python/%E5%BA%93%E7%9A%84%E5%AD%A6%E4%B9%A0/pymatplotlib%E5%BA%93/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello！</title>
    <link href="http://yoursite.com/2019/04/26/hello-world/"/>
    <id>http://yoursite.com/2019/04/26/hello-world/</id>
    <published>2019-04-26T04:21:19.042Z</published>
    <updated>2019-04-27T08:11:52.994Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hello-Welcome-to-my-blog"><a href="#Hello-Welcome-to-my-blog" class="headerlink" title="Hello!Welcome to my blog!"></a><strong>Hello!Welcome to my blog!</strong></h1><h3 id="坐标-Location-：-广州-Guangzhou"><a href="#坐标-Location-：-广州-Guangzhou" class="headerlink" title="坐标(Location)：  广州(Guangzhou)"></a><strong>坐标(Location)：  广州(Guangzhou)</strong></h3><h3 id="职业-Job-：-大学生-College-student"><a href="#职业-Job-：-大学生-College-student" class="headerlink" title="职业(Job)：  大学生(College student)"></a><strong>职业(Job)：  大学生(College student)</strong></h3><h3 id="博客简介-Blog-introduction-："><a href="#博客简介-Blog-introduction-：" class="headerlink" title="博客简介(Blog introduction) ："></a><strong>博客简介(Blog introduction) ：</strong></h3><h3 id="记录日常-Record-daily-work-and-life-happened"><a href="#记录日常-Record-daily-work-and-life-happened" class="headerlink" title="记录日常~~~ (Record daily work and life happened)"></a><strong>记录日常~~~ (Record daily work and life happened)</strong></h3><hr><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"Hello!    Welcome to my blog!"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"坐标(Location)：  广州(Guangzhou)"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"职业(Job)：  大学生(College student)"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"博客简介(Blog introduction) ："</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"记录日常~~~ (Record daily work and life happened)"</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Hello-Welcome-to-my-blog&quot;&gt;&lt;a href=&quot;#Hello-Welcome-to-my-blog&quot; class=&quot;headerlink&quot; title=&quot;Hello!Welcome to my blog!&quot;&gt;&lt;/a&gt;&lt;strong&gt;Hello
      
    
    </summary>
    
      <category term="个人介绍" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA%E4%BB%8B%E7%BB%8D/"/>
    
    
  </entry>
  
</feed>
